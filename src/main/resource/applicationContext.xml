<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tool="http://www.springframework.org/schema/tool" xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans.xsd 
                         http://www.springframework.org/schema/tx 
                          http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop 
                             http://www.springframework.org/schema/aop/spring-aop.xsd 
                              http://www.springframework.org/schema/jee 
                              http://www.springframework.org/schema/jee/spring-jee.xsd
                               http://www.springframework.org/schema/context 
                               http://www.springframework.org/schema/context/spring-context.xsd 
                                 http://www.springframework.org/schema/util 
                                  http://www.springframework.org/schema/util/spring-util.xsd 
                                http://www.springframework.org/schema/tool 
                                http://www.springframework.org/schema/tool/spring-tool.xsd
                                  http://www.springframework.org/schema/task 
       http://www.springframework.org/schema/task/spring-task.xsd "
	default-lazy-init="true" default-autowire="byName">
	
	
	
	  <!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->   
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    
  
<bean id="sessionFactory"
  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml">
		</property>
		<property name="hibernateProperties">
			<props>
			<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations">  
         <list><!-- 这里直接映射的pojo类所在的包，简单方便不用没次加一个pojo类都需要到这里来添加 -->  
            <value>classpath:com/javaer/model</value>
         </list>  
       </property>  
	</bean>
	
	


<!-- 自动扫描组件，这里要把web下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的。-->  
    <context:component-scan base-package="com">  
       <!--   <context:exclude-filter type="regex" expression="com.javaer.action.*"/>  -->
    </context:component-scan>  
	

	
	<!-- 下面是配置声明式事务管理的，个人感觉比用注解管理事务要简单方便 -->  
   
   <!-- 事务管理器-->
	<bean id="transactionManager-hibernate" abstract="false" lazy-init="default" autowire="default"
			class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<context:annotation-config/>
	<!-- 	 -->
	<tx:annotation-driven transaction-manager="transactionManager-hibernate" />
	
      <!-- 配置那些类的方法进行事务管理,需要aopalliance-1.0.jar和aspectjweaver.jar，当前com.neusoft.leehom.service包中的子包，  
                       类中所有方法需要，还需要参考tx:advice的设置 -->  
    <!-- 需要引入tx的命名空间 -->  
    <!-- 这是事务通知操作，使用的事务管理器引用自 transactionManager -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager-hibernate">  
       <tx:attributes>  
         <!-- 指定哪些方法需要加入事务，这里懒惰一下全部加入，可以使用通配符来只加入需要的方法 -->  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
           <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>  
           <tx:method name="query*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="*" propagation="REQUIRED" />  
        </tx:attributes>  
    </tx:advice>   

    <!-- Spring Aop Config -->
    <aop:config>
        <aop:pointcut id="pointcut" expression="  
                execution(* com.javaer.service.impl.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
    </aop:config>

     
    <aop:aspectj-autoproxy proxy-target-class="true" />



  
</beans>